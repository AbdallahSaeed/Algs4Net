<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>BinaryOutput Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="BinaryOutput class" /><meta name="System.Keywords" content="Algs4Net.BinaryOutput class" /><meta name="System.Keywords" content="BinaryOutput class, about BinaryOutput class" /><meta name="Microsoft.Help.F1" content="Algs4Net.BinaryOutput" /><meta name="Microsoft.Help.Id" content="T:Algs4Net.BinaryOutput" /><meta name="Description" content="Binary standard output. This class provides methods for converting primtive type variables (boolean, byte, char, int, long, float, and double) to sequences of bits and writing them to standard output. Uses ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Algs4Net" /><meta name="file" content="T_Algs4Net_BinaryOutput" /><meta name="guid" content="T_Algs4Net_BinaryOutput" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Algs4Net Class Library Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Algs4Net.htm" title="Algs4Net Class Library Documentation" tocid="roottoc">Algs4Net Class Library Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Algs4Net.htm" title="Algs4Net" tocid="N_Algs4Net">Algs4Net</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Algs4Net_BinaryOutput.htm" title="BinaryOutput Class" tocid="T_Algs4Net_BinaryOutput">BinaryOutput Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Algs4Net_BinaryOutput__ctor.htm" title="BinaryOutput Constructor " tocid="M_Algs4Net_BinaryOutput__ctor">BinaryOutput Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Algs4Net_BinaryOutput.htm" title="BinaryOutput Methods" tocid="Methods_T_Algs4Net_BinaryOutput">BinaryOutput Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">BinaryOutput Class</td></tr></table><span class="introStyle"></span><div class="summary"><p><span class="code">Binary standard output</span>. This class provides methods for converting
             primtive type variables (<span class="code">boolean</span>, <span class="code">byte</span>, <span class="code">char</span>,
             <span class="code">int</span>, <span class="code">long</span>, <span class="code">float</span>, and <span class="code">double</span>)
             to sequences of bits and writing them to standard output.
             Uses .NET representations, in little-endian (least-significant byte first).</p><p>
             The client must <span class="code">Flush()</span> the output stream when finished writing bits and 
             should not intermixing calls to <span class="code">output</span> with calls
             to <span class="code">Console</span> or <span class="code">Console.Out</span>; otherwise unexpected behavior 
             will result.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST6D92FC1A_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D92FC1A_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Algs4Net<span id="LST6D92FC1A_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D92FC1A_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BinaryOutput</span><br /></div><p> </p><strong>Namespace:</strong> <a href="N_Algs4Net.htm">Algs4Net</a><br /><strong>Assembly:</strong> Algs4Net (in Algs4Net.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">BinaryOutput</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">BinaryOutput</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput__ctor.htm">BinaryOutput</a></td><td><div class="summary">
            Represents an output stream from a source, which may not be the standard output
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Close.htm">Close</a></td><td><div class="summary">
             Flush and close standard output. Once standard output is closed, you can no
             longer write bits to it.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Flush.htm">Flush</a></td><td><div class="summary">
             Flush standard output, padding 0s if number of bits written so far
             is not a multiple of 8.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Algs4Net_BinaryOutput_MainTest.htm">MainTest</a></td><td><div class="summary">Test client.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write.htm">Write(Boolean)</a></td><td><div class="summary">
             Write the specified bit to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_1.htm">Write(Byte)</a></td><td><div class="summary">
             Write the 8-bit byte to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_2.htm">Write(Char)</a></td><td><div class="summary">
             Write the 8-bit char to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_4.htm">Write(Double)</a></td><td><div class="summary">
             Write the 64-bit double to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_5.htm">Write(Int16)</a></td><td><div class="summary">
             Write the 16-bit int to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_6.htm">Write(Int32)</a></td><td><div class="summary">
             Write the 32-bit int to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_8.htm">Write(Int64)</a></td><td><div class="summary">
             Write the 64-bit long to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_9.htm">Write(Single)</a></td><td><div class="summary">
             Write the 32-bit float to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_10.htm">Write(String)</a></td><td><div class="summary">
             Write the string of 8-bit characters to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_3.htm">Write(Char, Int32)</a></td><td><div class="summary">
             Write the r-bit char to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_7.htm">Write(Int32, Int32)</a></td><td><div class="summary">
             Write the r-bit int to standard output.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Algs4Net_BinaryOutput_Write_11.htm">Write(String, Int32)</a></td><td><div class="summary">
             Write the string of r-bit characters to standard output.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID5RBSection" class="collapsibleSection">This class is a C# port from the original Java class 
             <a href="http://algs4.cs.princeton.edu/code/edu/princeton/cs/algs4/output.java.html">output</a> implementation by
             Robert Sedgewick and Kevin Wayne.</div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Algs4Net.htm">Algs4Net Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>